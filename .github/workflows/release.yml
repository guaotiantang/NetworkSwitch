name: Release Build

permissions:
  contents: write
  packages: write

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Install dependencies
      run: go mod download
    
    - name: Build Windows AMD64 (GUI)
      run: |
        go build -ldflags="-H windowsgui -s -w" -o network_monitor_windows_amd64.exe
      env:
        GOOS: windows
        GOARCH: amd64
        CGO_ENABLED: 1
    
    - name: Build Windows AMD64 (Console)
      run: |
        go build -ldflags="-s -w" -o network_monitor_windows_amd64_console.exe
      env:
        GOOS: windows
        GOARCH: amd64
        CGO_ENABLED: 1
    
    - name: Build Windows 386 (GUI)
      run: |
        go build -ldflags="-H windowsgui -s -w" -o network_monitor_windows_386.exe
      env:
        GOOS: windows
        GOARCH: 386
        CGO_ENABLED: 1
    
    - name: Create release directory
      run: |
        New-Item -ItemType Directory -Path "release" -Force
        Copy-Item "network_monitor_windows_amd64.exe" "release\network_monitor.exe"
        Copy-Item "network_monitor_windows_amd64_console.exe" "release\network_monitor_console.exe"
        Copy-Item "config.ini" "release\"
        Copy-Item "icon.ico" "release\"
        Copy-Item "README.md" "release\"
        Copy-Item "LICENSE" "release\"
    
    - name: Get version
      id: get_version
      run: |
        if ("${{ github.event_name }}" -eq "workflow_dispatch") {
          $version = "${{ github.event.inputs.version }}"
        } else {
          $version = "${{ github.ref_name }}"
        }
        echo "version=$version" >> $env:GITHUB_OUTPUT
    
    - name: Create ZIP package
      run: |
        $version = "${{ steps.get_version.outputs.version }}"
        Compress-Archive -Path "release\*" -DestinationPath "network_monitor_${version}_windows_amd64.zip"
    
    - name: Generate release notes
      id: release_notes
      run: |
        $version = "${{ steps.get_version.outputs.version }}"
        
        $notes = @"
        ## üéâ ÁΩëÁªúÁõëÊéßÁ®ãÂ∫è ${version}
        
        ### ‚ú® ‰∏ªË¶ÅÂäüËÉΩ
        - üîÑ Ëá™Âä®ÁΩëÁªúÂàáÊç¢ÔºöÊô∫ËÉΩÊ£ÄÊµãÂÜÖÂ§ñÁΩëËøûÈÄöÊÄßÔºåËá™Âä®ÂàáÊç¢ÁΩëÁªúÊé•Âè£
        - üéØ Á≥ªÁªüÊâòÁõòÈõÜÊàêÔºöÂÆåÂÖ®ÈõÜÊàêÂà∞WindowsÁ≥ªÁªüÊâòÁõòÔºåÊîØÊåÅÂè≥ÈîÆËèúÂçïÊìç‰Ωú
        - ‚öôÔ∏è ÈÖçÁΩÆÊñá‰ª∂È©±Âä®ÔºöÈÄöËøáconfig.iniÊñá‰ª∂ÁÅµÊ¥ªÈÖçÁΩÆÊâÄÊúâÂèÇÊï∞
        - üéÆ ÁõëÊéßÊéßÂà∂ÔºöÊîØÊåÅÂêØÂä®/ÊöÇÂÅúÂèåÁΩëÊ£ÄÊµãÂäüËÉΩ
        - üñºÔ∏è Ëá™ÂÆö‰πâÂõæÊ†áÔºöÊîØÊåÅËá™ÂÆö‰πâÁ≥ªÁªüÊâòÁõòÂõæÊ†á
        
        ### üìã Á≥ªÁªüË¶ÅÊ±Ç
        - Windows 10/11
        - ÁÆ°ÁêÜÂëòÊùÉÈôêÔºàÁî®‰∫éÁΩëÁªúÊé•Âè£ÊéßÂà∂Ôºâ
        
        ### üì• ‰∏ãËΩΩÊñá‰ª∂ËØ¥Êòé
        - **network_monitor_${version}_windows_amd64.zip** - ÂÆåÊï¥ÂèëÂ∏ÉÂåÖÔºàÊé®ËçêÔºâ
        - **network_monitor_windows_amd64.exe** - 64‰Ωç‰∏ªÁ®ãÂ∫èÔºàÊó†Á™óÂè£ÁâàÊú¨Ôºâ
        - **network_monitor_windows_amd64_console.exe** - 64‰ΩçÊéßÂà∂Âè∞ÁâàÊú¨ÔºàË∞ÉËØïÁî®Ôºâ
        - **network_monitor_windows_386.exe** - 32‰Ωç‰∏ªÁ®ãÂ∫èÔºàÂÖºÂÆπÊÄßÁâàÊú¨Ôºâ
        
        ### üöÄ Âø´ÈÄüÂºÄÂßã
        1. ‰∏ãËΩΩÂπ∂Ëß£ÂéãÂÆåÊï¥ÂèëÂ∏ÉÂåÖ
        2. Ê†πÊçÆÁΩëÁªúÁéØÂ¢É‰øÆÊîπ `config.ini` ÈÖçÁΩÆÊñá‰ª∂
        3. Âè≥ÈîÆ‰ª•ÁÆ°ÁêÜÂëòË∫´‰ªΩËøêË°å `network_monitor.exe`
        4. Á®ãÂ∫èÂ∞ÜÂú®Á≥ªÁªüÊâòÁõòÊòæÁ§∫ÂõæÊ†á
        
        ### ‚öôÔ∏è ÈÖçÁΩÆËØ¥Êòé
        ËØ∑ÂèÇËÄÉÂéãÁº©ÂåÖÂÜÖÁöÑ `README.md` Êñá‰ª∂Ëé∑ÂèñËØ¶ÁªÜÁöÑÈÖçÁΩÆÂíå‰ΩøÁî®ËØ¥Êòé„ÄÇ
        
        ### üêõ ÈóÆÈ¢òÂèçÈ¶à
        Â¶ÇÈÅáÂà∞ÈóÆÈ¢òÔºåËØ∑Âú® [Issues](../../issues) È°µÈù¢Êèê‰∫§ÂèçÈ¶à„ÄÇ
        "@
        
        # Â∞ÜÂèëÂ∏ÉËØ¥Êòé‰øùÂ≠òÂà∞Êñá‰ª∂
        $notes | Out-File -FilePath "release_notes.md" -Encoding UTF8
        
        # ËÆæÁΩÆËæìÂá∫ÂèòÈáè
        echo "notes_file=release_notes.md" >> $env:GITHUB_OUTPUT
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_version.outputs.version }}
        name: ÁΩëÁªúÁõëÊéßÁ®ãÂ∫è ${{ steps.get_version.outputs.version }}
        body_path: ${{ steps.release_notes.outputs.notes_file }}
        files: |
          network_monitor_${{ steps.get_version.outputs.version }}_windows_amd64.zip
          network_monitor_windows_amd64.exe
          network_monitor_windows_amd64_console.exe
          network_monitor_windows_386.exe
        draft: false
        prerelease: ${{ contains(steps.get_version.outputs.version, 'alpha') || contains(steps.get_version.outputs.version, 'beta') || contains(steps.get_version.outputs.version, 'rc') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: network-monitor-builds
        path: |
          network_monitor_windows_amd64.exe
          network_monitor_windows_amd64_console.exe
          network_monitor_windows_386.exe
          network_monitor_${{ steps.get_version.outputs.version }}_windows_amd64.zip
        retention-days: 30